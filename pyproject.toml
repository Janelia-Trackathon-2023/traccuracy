# https://peps.python.org/pep-0517/
[build-system]
build-backend = "setuptools.build_meta"
requires = ["wheel", "setuptools>=40.8.0", "setuptools_scm"]


# https://peps.python.org/pep-0621/
[project]
name = "traccuracy"
description = "Utilities for computing common accuracy metrics on cell tracking challenge solutions with ground truth"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "BSD 3-Clause License" }
authors = [
    { email = "draga.doncilapop1@monash.edu", name = "Draga Doncila Pop" },
    { email = "cmalinmayor@gmail.com", name = "Caroline Malin-Mayor" },
    { email = "msschwartz21@gmail.com", name = "Morgan Schwartz" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "numpy",
    "networkx",
    "pandas",
    "tifffile",
    "imagecodecs",  # required for ctc tiffs
    "scikit-image",
    "tqdm",
    "typer",
    # numba technically optional, will still work without it
    "numba; python_version != '3.11'",
    "pyarrow",
]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-timeout",
    "tabulate",
]
dev = [
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "ruff",
    "traccuracy[test]",
    "traccuracy[docs]"
]
docs = [
    "ipython==8.17.1",
    "myst-parser==2.0.0",
    "nbsphinx-link==1.3.0",
    "nbsphinx==0.9.3",
    "sphinx-autoapi==3.0.0",
    "sphinx-click==5.0.1",
    "sphinx-rtd-theme==1.3.0",
    "Sphinx==7.2.6",
    "jupytext",
    "ipykernel",
    "jupyter-sphinx",
    "matplotlib"
]
covreport = [
    "traccuracy[test]",
    "seaborn"
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "win-64", "linux-64"]

[tool.pixi.dependencies]
python = "3.10.*"

[tool.pixi.pypi-dependencies]
traccuracy = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev", "docs", "test", "covreport"], solve-group = "default" }

[tool.pixi.tasks]
getdata = "python scripts/download_test_data.py"

[tool.pixi.feature.test.tasks]
test = "pytest"
benchmark = { cmd = "pytest tests/bench.py", depends-on = ["getdata"] }

[tool.pixi.feature.covreport.tasks]
test-case-report = "python scripts/test_case_report.py test-case-report && rm matchers*.json track_errors*.json"

[tool.pixi.feature.docs.tasks]
kernel-config = { cmd = "python -m ipykernel install --user --name=\"traccuracy-docs\" "}
docs = { cmd = "sphinx-build . ../_build -D jupyter_execute_default_kernel=\"traccuracy-docs\" -D nbsphinx_kernel_name=\"traccuracy-docs\"", cwd="docs/source", depends-on=["kernel-config"]}

[project.urls]
homepage = "https://github.com/Janelia-Trackathon-2023/traccuracy"
repository = "https://github.com/Janelia-Trackathon-2023/traccuracy"
documentation = "https://traccuracy.readthedocs.io/"

[project.scripts]
traccuracy = "traccuracy.cli:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ['src']           #  list of folders that contain packages
include = ['traccuracy*']

[tool.setuptools_scm] # Necessary to enable setuptools_scm for dynamic versioning from tags

# same as console_scripts entry point
# [project.scripts]
# spam-cli = "spam:main_cli"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# [project.entry-points."spam.magical"]
# tomatoes = "spam:main_tomatoes"

# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
# https://beta.ruff.rs/docs/rules/
extend-select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TID",  # tidy imports
    "TCH",  # type checking
    # "D",    # pydocstyle
]
# I do this to get numpy-style docstrings AND retain
# D417 (Missing argument descriptions in the docstring)
# otherwise, see:
# https://beta.ruff.rs/docs/faq/#does-ruff-support-numpy-or-google-style-docstrings
# https://github.com/charliermarsh/ruff/issues/2606
extend-ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D401", # First line should be in imperative mood
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]
unfixable = [
    "B905", # currently adds strict=False to zips, should add strict=True manually
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]
"setup.py" = ["D"]
"docs/source/*/*.pct.py" = ["E402", "B006"]
# Ignore typer functions in function definitions
"src/traccuracy/cli.py" = ["B008"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore:Numba not installed, falling back to slower:UserWarning",
]
addopts = ["--benchmark-min-rounds=1"]
pythonpath = [
  "tests"
]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
# strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

# # module specific overrides
# [[tool.mypy.overrides]]
# module = ["numpy.*",]
# ignore_errors = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]
[tool.coverage.run]
source = ["traccuracy"]

# https://github.com/mgedmin/check-manifest#configuration
# [tool.check-manifest]
# ignore = [
#     ".github_changelog_generator",
#     ".pre-commit-config.yaml",
#     ".ruff_cache/**/*",
#     "tests/**/*",
# ]
